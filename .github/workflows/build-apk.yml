name: Build APK for Google Glass

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for scripts
      run: |
        chmod +x gradlew
        chmod +x build_glass_apk.sh

    - name: Accept Android SDK licenses
      run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Install Android SDK components
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platforms;android-19" \
          "platforms;android-34" \
          "build-tools;34.0.0"

    - name: Build APK using cross-platform script
      run: ./build_glass_apk.sh
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}

    - name: Build Release APK
      run: ./gradlew assembleRelease --no-daemon
      env:
        JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
      continue-on-error: true  # Release might fail without signing config

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-${{ github.run_number }}
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-${{ github.run_number }}
        path: app/build/outputs/apk/release/app-release-unsigned.apk
        retention-days: 30
      continue-on-error: true  # Release might not exist

    - name: Generate APK Details
      if: success()
      run: |
        echo "## Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          echo "### Debug APK" >> $GITHUB_STEP_SUMMARY
          echo "- **Size:** $(ls -lh app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')" >> $GITHUB_STEP_SUMMARY

          # Extract APK info using aapt if available
          if [ -d "$ANDROID_HOME/build-tools/34.0.0" ]; then
            APK_INFO=$($ANDROID_HOME/build-tools/34.0.0/aapt dump badging app/build/outputs/apk/debug/app-debug.apk 2>/dev/null | head -5)
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "$APK_INFO" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation Instructions" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the APK artifact from the Actions tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Connect Google Glass via USB with debugging enabled" >> $GITHUB_STEP_SUMMARY
        echo "3. Run: \`adb install app-debug.apk\`" >> $GITHUB_STEP_SUMMARY

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download APK artifact
      uses: actions/download-artifact@v4
      with:
        name: app-debug-${{ github.run_number }}
        path: ./artifacts

    - name: Get version from gradle
      id: version
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle.kts | sed 's/.*"\(.*\)".*/\1/')
        VERSION_CODE=$(grep "versionCode" app/build.gradle.kts | sed 's/.*= \([0-9]*\).*/\1/')
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "tag=v${VERSION_NAME}-build${VERSION_CODE}" >> $GITHUB_OUTPUT

    - name: Check if tag exists
      id: check_tag
      run: |
        if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.version.outputs.tag }}"; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: Release ${{ steps.version.outputs.version_name }} (Build ${{ steps.version.outputs.version_code }})
        body: |
          ## Google Glass Assistant APK

          **Version:** ${{ steps.version.outputs.version_name }}
          **Build:** ${{ steps.version.outputs.version_code }}
          **Commit:** ${{ github.sha }}

          ### What's New
          - Configured for Google Glass XE24 (API 19)
          - Multidex support enabled
          - Automated CI/CD builds

          ### Installation
          1. Enable Developer Options on Google Glass
          2. Enable USB Debugging
          3. Connect Glass via USB
          4. Install: `adb install app-debug.apk`

          ### Requirements
          - Google Glass Explorer Edition with XE24 firmware
          - Android 4.4 KitKat (API 19)
        files: |
          ./artifacts/app-debug.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}